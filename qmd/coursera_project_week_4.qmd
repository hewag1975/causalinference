---
title: "Inverse probability of treatment"
format: 
  html:
    code-fold: true
editor: source
editor_options: 
  chunk_output_type: console
---

## Instructions

Instructions on this project are given on [Coursera](https://www.coursera.org/learn/crash-course-in-causality/exam/wEyaG/data-analysis-project-carry-out-an-iptw-causal-analysis/attempt).

Objective is to estimate the causal effect of a labor training program on 
post-intervention income levels.


## Project setup

Setup consists of installing the required R-packages `tableone`, `Matching`, 
`MatchIt`, `ipw`, `survey` and loading the sample data `lalonde` which is 
included in the `MatchIt` package. 

```{r}
#| label: setup
#| message: false
pkg = c("tableone", "Matching", "MatchIt", "ipw", "survey")
pkg = pkg[which(!pkg %in% installed.packages()[, 1])]

install.packages(pkg)

library("data.table")
library("ggplot2")
library("tableone")
library("Matching")
library("MatchIt")
library("ipw")
# library("sandwich")
library("survey")

data(lalonde) 

data = as.data.table(lalonde)
head(data)
```


## Exercises

### Propensity score and weights

Estimate the propensity score for each subject using logistic regression and 
obtain inverse probability of treatment weights per subject.

```{r}
#| label: iptw

pmod = glm(
  treat ~ .
  , family = "binomial"
  , data = data[, .SD, .SDcols = setdiff(names(data), y = "re78")]
)

pscore = pmod$fitted.values

iptw = ifelse(
  data$treat == 1
  , yes = 1 / (pscore)
  , no = 1 / (1 - pscore)
)

par(mfrow = c(2L, 1L))

hist(
  pscore
  , breaks = 25L
  , main = "Propensity score"
  , xlab = ""
)

hist(
  iptw
  , breaks = 25L
  , main = "Inv. probability of treatment weights"
  , xlab = ""
)
```

**Answers:**

The range of the inverse probability of treatment weights is 
\[`r round(range(iptw), digits = 2L)`\].

```{r}
#| label: iptw-alternative
#| include: false

## propensity score model to get weights
wmod = ipwpoint(
  treat
  , family = "binomial"
  , link = "logit"
  , denominator = ~age + educ + race + married + nodegree + re74 + re75
  , data = data
)

ipwplot(
  wmod$ipw.weights
  , logscale = FALSE
  , main = "Inv. probability of treatment weights"
  , xlim = c(0, 22)
  , xlab = ""
)

iptw = wmod$ipw.weights
```


### Standardized mean difference 

Calculate the standardized mean difference for each confounder in the weighted 
population. 

```{r}
#| label: smd

## apply weights to data
wdata = svydesign(ids = ~ 1, data = data, weights = ~ iptw)

wtable = svyCreateTableOne(
  vars = setdiff(names(data), y = "treat")
  , strata = "treat"
  , data = wdata
  , test = FALSE
)

print(wtable, smd = TRUE)

## SMD for nodegree
idx = which(data$treat == 1L)

nodeg1m = Hmisc::wtd.mean(
  data$nodegree[idx]
  , weights = iptw[idx]
)

nodeg0m = Hmisc::wtd.mean(
  data$nodegree[-idx]
  , weights = iptw[-idx]
)

nodeg1var = Hmisc::wtd.var(
  data$nodegree[idx]
  , weights = iptw[idx]
) 

nodeg0var = Hmisc::wtd.var(
  data$nodegree[-idx]
  , weights = iptw[-idx]
) 

nodegsmd = ((nodeg1m - nodeg0m) / 
              sqrt(0.5 * (nodeg1var + nodeg0var))) |> 
  abs() |> 
  round(digits = 2L)
```

**Answers:**

The standardized mean difference for nodegree is `r nodegsmd`.


### Average causal effect 

Find the 95% confidence interval for the average causal effect using IPTW.

```{r}
#| label: causal-effect

msm = svyglm(
  re78 ~ treat
  , design = svydesign(
    ids = ~ 1
    , weights = ~iptw
    , data = data
  )
)
```

**Answers:**

The estimated causal effect is `r round(coef(msm)[2], digits = 2L)`$ with 
a 95% confidence interval of \[`r round(confint(msm)[2,], digits = 2L)`\].


### Average causal effect with weight truncation

Find the 95% confidence interval for the average causal effect using IPTW 
**with weight truncation**.

```{r}
#| label: causal-effect-trunc

wmod = ipwpoint(
  treat
  , family = "binomial"
  , link = "logit"
  , denominator = ~age + educ + race + married + nodegree + re74 + re75
  , data = data
  , trunc = 0.01
)

iptw = wmod$weights.trunc

msm = svyglm(
  re78 ~ treat
  , design = svydesign(
    ids = ~ 1
    , weights = ~iptw
    , data = data
  )
)
```

**Answers:**

The estimated causal effect is `r round(coef(msm)[2], digits = 2L)`$ with 
a 95% confidence interval of \[`r round(confint(msm)[2,], digits = 2L)`\].
